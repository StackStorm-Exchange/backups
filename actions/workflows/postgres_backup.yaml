---
version: '1.0'
description: Workflow that backs up the StackStorm Postgres database
input:
  - path
  - mistral_config
  - date
  - retention_days
  - backup_timeout

vars:
  - postgres_dump_archive: ""
  - run_success: true

output:
  - postgres_dump_archive: '{{ ctx().postgres_dump_archive }}'

tasks:
  main:
    action: core.noop
    next:
      - when: '{{ succeeded() and (ctx().date) }}'
        do:
          - read_connection
      - when: '{{ succeeded() and (not ctx().date) }}'
        do:
          - date

  date:
    action: core.local
    input:
      cmd: "date +%Y%m%d_%H%M%S"
    next:
      - when: '{{ succeeded() }}'
        publish:
          - date: '{{ result().stdout }}'
        do:
          - read_connection

  read_connection:
    action: core.local
    input:
      cmd: "grep -E '^connection' {{ ctx().mistral_config }}"
    next:
      - when: '{{ succeeded() }}'
        publish:
          - postgres_connection: "{{ result().stdout.split(' ')[2] }}"
          - postgres_dump_archive: '{{ ctx().path }}/postgres_dump_{{ ctx().date }}.sql.gz'
        do:
          - mkdir_path

  mkdir_path:
    action: core.local_sudo
    input:
      cmd: "mkdir -p '{{ ctx().path }}'"
    next:
      - when: '{{ succeeded() }}'
        do:
          - postgres_backup

  # Even though the action might timeout the back up eventually succeeds so we still want to
  # remove the old backups to prevent the disk space from filling up.
  postgres_backup:
    action: core.local_sudo
    input:
      cmd: "pg_dump --compress=9 -f '{{ ctx().postgres_dump_archive }}' '{{ ctx().postgres_connection }}'"
      timeout: "{{ ctx().backup_timeout }}"
    next:
      - when: '{{ succeeded() }}'
        do:
          - postgres_delete_old_files
      - when: '{{ failed() }}'
        publish:
          - run_success: false
        do:
          - postgres_delete_old_files

  postgres_delete_old_files:
    action: core.local_sudo
    input:
      cwd: '{{ ctx().path }}'
      cmd: "find . -name 'postgres_dump_*' -mtime {{ ctx().retention_days }} | xargs --no-run-if-empty rm"
    next:
      - when: "{{ succeeded() and (ctx().run_success) }}"
        do:
          - noop
      - when: "{{ succeeded() and (not ctx().run_success) }}"
        do:
          - fail
